---
- name: Prepare VPS for FiveM
  hosts: all_servers
  vars_files:
    - vars/main.yml
  vars:
    - archive_path: "/tmp/fx.tar.xz"
    - fx_service_name: "fxserver-{{ environment_name }}"
    - mariadb_service_name: "fivem-db-{{ environment_name }}"
    - service_dir_fxserver: "{{ fivem_user_dir }}/{{ environment_name }}"
    - service_dir_mariadb: "/var/fivem/{{ environment_name }}"

  pre_tasks:
    - name: Update apt package index
      become: true
      ansible.builtin.apt:
        update_cache: true

    - name: Install essential packages
      become: true
      ansible.builtin.apt:
        name:
          - git
          - curl
          - iptables
          - iptables-persistent
          - wget
          - screen
          - xz-utils
          - libatomic1
          - libc++-dev
          - libssl-dev
          - zlib1g
          - build-essential
          - docker.io
          - docker-compose
          - neovim
        state: present
        update_cache: true
      when: environment_name == 'production'

    - name: Enable Docker service
      become: true
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started
      when: environment_name == 'production'

    - name: Create fivem group
      become: true
      ansible.builtin.group:
        name: fivem
        state: present
      when: environment_name == 'production'

    - name: Create fivem user
      become: true
      ansible.builtin.user:
        name: fivem
        groups:
          - fivem
          - docker
        home: /home/fivem
        shell: /bin/bash
        password: "{{ fivem_user_password }}"
        # system: true
        create_home: true
      when: environment_name == 'production'

    - name: Add the current user to the Docker and FiveM Admins groups
      become: true
      ansible.builtin.user:
        name: "{{ admin_user }}"
        groups: docker, fivem
        append: true
      when: environment_name == 'production'

    - name: Create the fivem backups directory
      ansible.builtin.file:
        path: "/home/{{ admin_user }}/fivem_backups"
        state: directory
        mode: "0775"
        owner: "{{ admin_user }}"

  tasks:
    - name: Download server binaries
      become: true
      ansible.builtin.get_url:
        url: "{{ fx_source_download_url }}"
        dest: "{{ archive_path }}"
        mode: "0644"
      retries: 3
      delay: 5
      delegate_to: localhost
      run_once: true
      register: tarball_download

    - name: Ensure the server binaries are dowloaded
      ansible.builtin.file:
        path: "{{ archive_path }}"
        state: file

    - name: Ensure required directories are present
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0775'
        group: fivem
        owner: fivem
      loop:
        - "{{ service_dir_fxserver }}"
        - "{{ service_dir_fxserver }}/server-data"
        - "{{ service_dir_fxserver }}/server"
        - "{{ service_dir_mariadb }}"
        - "{{ service_dir_mariadb }}/mariadb_data"

    - name: Extract FXServer tar file
      become: true
      ansible.builtin.command:
        cmd: "sudo tar -xf {{ archive_path }} -C {{ service_dir_fxserver }}/server"

    - name: Ensure owner and group for fxserver
      become: true
      ansible.builtin.command:
        cmd: "sudo chown -R fivem:fivem {{ service_dir_fxserver }}"

    - name: Create backup scripts
      become: true
      ansible.builtin.template:
        src: templates/fivem_backup.sh.j2
        dest: "{{ backups_dir }}/fivem_backup_{{ environment_name }}.sh"
        mode: "0755"
        owner: debian
        group: fivem

    - name: Create restore scripts
      become: true
      ansible.builtin.template:
        src: templates/fivem_restore.sh.j2
        dest: "{{ backups_dir }}/fivem_restore_{{ environment_name }}.sh"
        mode: "0755"
        owner: debian
        group: fivem

    - name: Setup docker-compose file for txAdmin database
      become: true
      ansible.builtin.template:
        src: templates/docker-compose-mariadb.yml.j2
        dest: "{{ service_dir_mariadb }}/docker-compose.yml"
        mode: "0600"
        group: fivem
        owner: fivem

    - name: Setup systemd service for docker-compose database
      become: true
      ansible.builtin.template:
        src: service-mariadb.service.j2
        dest: /etc/systemd/system/fivem-db-{{ environment_name }}.service
        owner: fivem
        group: fivem
        mode: "0644"
      notify:
        # - Reload systemd
        - Enable docker-compose-db service

    - name: Setup systemd service for fxserver
      become: true
      ansible.builtin.template:
        src: templates/service-fxserver.service.j2
        dest: "/etc/systemd/system/fxserver-{{ environment_name }}.service"
        mode: "0644"
        # group: fivem
        # owner: fivem
      notify:
        # - Reload systemd
        - Enable fxserver service

    - name: Ensure iptables rules are applied
      become: true
      ansible.builtin.iptables:
        chain: INPUT
        protocol: "{{ item.protocol }}"
        destination_port: "{{ item.port }}"
        jump: ACCEPT
      loop:
        - { protocol: tcp, port: "{{ fivem_port }}" }
        - { protocol: udp, port: "{{ fivem_port }}" }
        - { protocol: tcp, port: "{{ txadmin_port }}" }
        - { protocol: tcp, port: "{{ rcon_port }}" }
        - { protocol: tcp, port: "{{ mariadb_port }}" }
      notify:
        - Save iptables rules
        - Reload systemd

    - name: Enable IP forwarding and NAT rules (required for public availability)
      become: true
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
        sysctl_set: true

    - name: Allow txAdmin and RCON access for admin group
      become: true
      community.general.sudoers:
        name: fivem
        user: "%fivem"
        commands: 
          - /usr/bin/mysql
          - /usr/bin/curl
          - /usr/bin/tar
          - "/home/fivem/{{ environment_name }}/server/run.sh"
          - "/usr/bin/systemctl"
          - "/usr/bin/screen"
          - "/usr/bin/docker-compose"
        nopassword: true

    # # TODO: Get these working
    # - name: Allow txAdmin and RCON access for admin group
    #   become: true
    #   community.general.sudoers:
    #     name: fivem
    #     user: "%fivem"
    #     commands: 
    #       - /usr/bin/mysql
    #       - /usr/bin/curl
    #       - "/home/fivem/{{ environment_name }}/server/run.sh"
    #       - "/usr/bin/systemctl"
    #       - "/usr/bin/screen"
    #     nopassword: true

    # - name: Allow txAdmin and RCON access for admin group
    #   become: true
    #   ansible.builtin.lineinfile:
    #     path: "/etc/sudoers"
    #     state: present
    #     regexp: "^%fivem"
    #     line: "%fivem ALL=(ALL) NOPASSWD: /usr/bin/mysql, /usr/bin/curl, /usr/local/bin/fxadmin-cli"

    - name: Add GitHub to known_hosts
      become: true
      ansible.builtin.known_hosts:
        name: github.com
        key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
        path: /etc/ssh/ssh_known_hosts

# TODO: See if this can be refactored
    - name: Configure Git to treat the directory as safe
      become: true
      ansible.builtin.command:
        cmd: "git config --global --add safe.directory {{ service_dir_fxserver }}/server-data"
      register: github_safe_dir
      changed_when: false

    - name: Clone the server-data
      become: true
      ansible.builtin.git:
        repo: https://github.com/citizenfx/cfx-server-data.git
        # version: 8-digit hash
        dest: "{{ service_dir_fxserver }}/server-data"
      retries: 3
      delay: 5

    - name: Set ownership to fivem:fivem for the server-data directory
      become: true
      ansible.builtin.file:
        path: "{{ service_dir_fxserver }}/server-data"
        state: directory
        recurse: true
        owner: fivem
        group: fivem

    - name: Generate server.cfg template file
      become: true
      ansible.builtin.template:
        src: server.cfg.j2
        dest: "{{ service_dir_fxserver }}/server-data/server.cfg"
        # owner: "{{ fx_service_name }}"
        owner: fivem
        group: fivem
        mode: "0775"



  handlers:

    - name: Save iptables rules
      become: true
      ansible.builtin.command: sudo netfilter-persistent save
      register: iptables_saved
      changed_when: false

    - name: Reload systemd
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable docker-compose-db service
      become: true
      ansible.builtin.systemd:
        name: "fivem-db-{{ environment_name }}.service"
        enabled: true
        state: started

    - name: Enable fxserver service
      become: true
      ansible.builtin.systemd:
        name: "fxserver-{{ environment_name }}.service"
        enabled: true
        state: started

    # - name: Save iptables rules
    #   become: true
    #   ansible.builtin.command: iptables-save > /etc/iptables/rules.v4
    #   register: iptables_saved
    #   changed_when: false
