---
- name: Prepare VPS for FiveM
  hosts: localhost
  become: true
  vars_files:
    - vars/prod.yml
  tasks:
    - name: Update apt and install required dependencies
      ansible.builtin.apt:
        update_cache: true
        name: "{{ item }}"
        state: present
      loop:
        - git
        - curl
        - wget
        - screen
        - xz-utils
        - libatomic1
        - libc++-dev
        - libssl-dev
        - zlib1g
        - build-essential
        - ufw

    - name: Create a dedicated FiveM user
      ansible.builtin.user:
        name: "{{ service_user }}"
        shell: /bin/bash
        home: "{{ service_home }}"
        state: present
        create_home: true
      
    - name: Download and extract FiveM server binaries
      become: true
      become_user: root
      ansible.builtin.shell: |
        mkdir -p "{{ service_deploy_dir }}"
        cd "{{ service_deploy_dir }}"
        wget "{{ source_download_url }}"
        tar -xvf fx.tar.xz
        rm fx.tar.xz

    - name: Set proper ownership for FiveM server directory
      become: true
      ansible.builtin.command: chown -R {{ service_user }}:{{ service_user }} {{ service_deploy_dir }}

    - name: Create server-data directory (for configs and resources)
      become: true
      ansible.builtin.file:
        path: "{{ service_deploy_dir }}/server-data"
        state: directory
        owner: "{{ service_user }}"
        group: "{{ service_user }}"

    - name: Generate server.cfg template file
      ansible.builtin.template:
        src: server.cfg.j2
        dest: "{{ service_deploy_dir }}/server-data/server.cfg"
        owner: "{{ service_user }}"
        group: "{{ service_user }}"

    - name: Create a basic systemd service for FiveM
      ansible.builtin.copy:
        dest: /etc/systemd/system/{{ service_user }}.service
        content: |
          [Unit]
          Description={{ fivem_server_name }} Server
          After=network.target

          [Service]
          User={{ service_user }}
          WorkingDirectory={{ service_deploy_dir }}
          ExecStart={{ service_deploy_dir }}/run.sh +exec {{ service_deploy_dir }}/server-data/server.cfg
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd to pick up the new service
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable and start FiveM server on boot
      ansible.builtin.systemd:
        name: fivem_dev
        enabled: true
        state: started

    - name: Open txAdmin port in firewall
      ufw:
        rule: allow
        port: "{{ fivem_txadmin_port }}"
        proto: tcp
