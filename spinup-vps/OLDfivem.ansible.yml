---
- name: Prepare VPS for FiveM
  hosts: localhost
  become: true
  vars_files:
    - vars/main.yml
    - vars/prod.yml
    - vars/staging.yml
    - vars/dev.yml
  
  tasks:
    - name: Update apt and install required dependencies
      ansible.builtin.apt:
        update_cache: true
        name: "{{ item }}"
        state: present
      loop:
        - git
        - curl
        - wget
        - screen
        - xz-utils
        - libatomic1
        - libc++-dev
        - libssl-dev
        - zlib1g
        - build-essential
        - ufw
        - docker-compose

    # - name: Create a dedicated FiveM Production user
    #   ansible.builtin.user:
    #     name: "{{ service_user_prod }}"
    #     shell: /bin/bash
    #     home: "{{ service_home_prod }}"
    #     state: present
    #     create_home: true
      
    # - name: Create a dedicated FiveM Staging user
    #   ansible.builtin.user:
    #     name: "{{ service_user_staging }}"
    #     shell: /bin/bash
    #     home: "{{ service_home_staging }}"
    #     state: present
    #     create_home: true
      
    # - name: Create a dedicated FiveM Dev users
    #   ansible.builtin.user:
    #     name: "{{ service_user_dev }}"
    #     shell: /bin/bash
    #     home: "{{ service_home_dev }}"
    #     state: present
    #     create_home: true
    
    - name: Create dedicated FiveM service users and home directories
      ansible.builtin.user:
        name: "{{ service_base_name }}{{ item }}"
        shell: /bin/bash
        home: "/home/{{ service_base_name }}{{ item }}"
        state: present
        create_home: true
      loop:
        - "_prod"
        - "_staging"
        - "_dev"

    - name: Create service dirctories for all environments
      become: true
      become_user: root
      ansible.builtin.file:
        path: "{{ service_deploy_base_path }}/{{ service_base_name }}{{ item }}/server-data"
        state: directory
        owner: "{{ service_base_name }}{{ item }}"
        group: "{{ service_base_name }}{{ item }}"
      loop:
        - "_prod"
        - "_staging"
        - "_dev"

    - name: Download server binaries
      become: true
      ansible.builtin.get_url:
        url: "{{ fivem_disribution_url }}/{{ fivem_server_distribution_file }}"
        dest: {{ ansible_user_dir }}

    - name: Copy distribution files to service directory
      become: true
      become_user: root
      ansible.builtin.copy:
        src: "{{ ansible_user_dir }}/{{ fivem_server_distribution_file }}"
        dest: "{{ service_deploy_base_path }}/{{ service_base_name }}{{ item }}/server/"
      loop:
        - "_prod"
        - "_staging"
        - "_dev"

    - name: Add GitHub to known_hosts
      ansible.builtin.shell: |
        ssh-keyscan -H github.com >> /etc/ssh/ssh_known_hosts

    - name: Clone initial server-data to all environments
      ansible.builtin.shell: |
        git clone https://github.com/citizenfx/cfx-server-data.git {{ item }}/server-data
      loop:
        - "{{ service_deploy_base_path }}/{{ service_base_name }}_prod"
        - "{{ service_deploy_base_path }}/{{ service_base_name }}_staging"
        - "{{ service_deploy_base_path }}/{{ service_base_name }}_dev"
        
    - name: Extract distribution binaries
      become: true
      become_user: root
      ansible.builtin.shell: |
        cd "{{ item }}/server"
        tar -xvf fx.tar.xz
        rm fx.tar.xz
      loop:
        - "{{ service_deploy_base_path }}/{{ service_base_name }}_prod"
        - "{{ service_deploy_base_path }}/{{ service_base_name }}_staging"
        - "{{ service_deploy_base_path }}/{{ service_base_name }}_dev"

    - name: Set proper ownership for FiveM server directory
      become: true
      ansible.builtin.command: chown -R {{ item }}:{{ item }} {{ service_deploy_base_path }}/{{ item }}/server
      loop:
        - "{{ service_base_name }}_prod"
        - "{{ service_base_name }}_staging"
        - "{{ service_base_name }}_dev"

    - name: Set proper ownership for FiveM server-data directory
      become: true
      ansible.builtin.command: chown -R {{ item }}:{{ item }} {{ service_deploy_base_path }}/{{ item }}/server-data
      loop:
        - "{{ service_base_name }}_prod"
        - "{{ service_base_name }}_staging"
        - "{{ service_base_name }}_dev"

    - name: Generate server.cfg template file
      ansible.builtin.template:
        src: server.cfg.j2
        dest: "{{ service_deploy_base_path }}/{{ item }}/server-data/server.cfg"
        owner: "{{ item }}"
        group: "{{ item }}"
      loop:
        - "{{ service_base_name }}_prod"
        - "{{ service_base_name }}_staging"
        - "{{ service_base_name }}_dev"

    - name: Create a basic systemd service for FiveM
      ansible.builtin.copy:
        dest: /etc/systemd/system/{{ item }}.service
        content: |
          [Unit]
          Description={{ item }} Server
          After=docker.service
          Requires=docker.service

          [Service]
          User={{ item }}
          WorkingDirectory={{ service_deploy_base_path }}/{{ item }}
          ExecStart={{ service_deploy_dir }}/run.sh +exec {{ service_deploy_dir }}/server-data/server.cfg
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
      loop:
        - "{{ service_base_name }}_prod"
        - "{{ service_base_name }}_staging"
        - "{{ service_base_name }}_dev"



    # - name: Download server data files
    #   become: true
    #   ansible.builtin.get_url:
    #     url: "{{ fivem_disribution_url }}/{{ fivem_server_data_file }}"
    #     dest: {{ ansible_user_dir }}
    
    # - name: Copy distribution to prod
    #   become: true
    #   become_user: root
    #   ansible.builtin.copy:
    #     src: "{{ ansible_user_dir }}/{{ fivem_server_distribution_file }}"
    #     dest: "{{ service_deploy_dir_prod }}/server/"

    # # - name: Copy data files to prod
    # #   become: true
    # #   become_user: root
    # #   ansible.builtin.copy:
    # #     src: "{{ ansible_user_dir }}/{{ fivem_server_data_file }}"
    # #     dest: "{{ service_deploy_dir_prod }}/server-data/"

    # - name: Copy distribution to staging
    #   become: true
    #   become_user: root
    #   ansible.builtin.copy:
    #     src: "{{ ansible_user_dir }}/{{ fivem_server_distribution_file }}"
    #     dest: "{{ service_deploy_dir_staging }}/server/"
    
    # # - name: Copy data files to staging
    # #   become: true
    # #   become_user: root
    # #   ansible.builtin.copy:
    # #     src: "{{ ansible_user_dir }}/{{ fivem_server_data_file }}"
    # #     dest: "{{ service_deploy_dir_staging }}/server-data/"

    # - name: Copy distribution to dev
    #   become: true
    #   become_user: root
    #   ansible.builtin.copy:
    #     src: "{{ ansible_user_dir }}/{{ fivem_server_distribution_file }}"
    #     dest: "{{ service_deploy_dir_dev }}/server/"

    # # - name: Copy data files to dev
    # #   become: true
    # #   become_user: root
    # #   ansible.builtin.copy:
    # #     src: "{{ ansible_user_dir }}/{{ fivem_server_data_file }}"
    # #     dest: "{{ service_deploy_dir_dev }}/server-data/"



    # - name: Extract data files
    #   become: true
    #   become_user: root
    #   ansible.builtin.shell: |
    #     cd "{{ item }}/server-data"
    #     tar -xvf fx.tar.xz
    #     rm fx.tar.xz
    #   loop:
    #     - {{ service_deploy_dir_prod }}
    #     - {{ service_deploy_dir_staging }}
    #     - {{ service_deploy_dir_dev }}


    # - name: Create server-data directory (for configs and resources)
    #   become: true
    #   ansible.builtin.file:
    #     path: "{{ service_deploy_base_path }}/{{ service_base_name }}_prod/server-data"
    #     state: directory
    #     owner: "{{ service_base_name }}_prod"
    #     group: "{{ service_base_name }}_prod"

    # - name: Generate server.cfg template file
    #   ansible.builtin.template:
    #     src: server.cfg.j2
    #     dest: "{{ service_deploy_dir }}/server-data/server.cfg"
    #     owner: "{{ service_user }}"
    #     group: "{{ service_user }}"

    - name: Create a basic systemd service for FiveM
      ansible.builtin.copy:
        dest: /etc/systemd/system/{{ service_user }}.service
        content: |
          [Unit]
          Description={{ fivem_server_name }} Server
          After=network.target

          [Service]
          User={{ service_user }}
          WorkingDirectory={{ service_deploy_dir }}
          ExecStart={{ service_deploy_dir }}/run.sh +exec {{ service_deploy_dir }}/server-data/server.cfg
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd to pick up the new service
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable and start FiveM server on boot
      ansible.builtin.systemd:
        name: fivem_dev
        enabled: true
        state: started

    - name: Open txAdmin port in firewall
      ufw:
        rule: allow
        port: "{{ fivem_txadmin_port }}"
        proto: tcp
