# .github/workflows/merge_to_development.yml
name: Merge to Development

on:
  push:
    branches:
      - main

jobs:
  tag_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out the code with tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          tags: true

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "latest_tag=${latest_tag}" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          IFS='.' read -r -a parts <<< "${latest_tag#v}"
          major="${parts[0]}"
          minor="${parts[1]}"
          patch=$((parts[2] + 1))
          new_tag="v${major}.${minor}.${patch}-$(date +'%Y_%m_%d_%H%M%S')"
          echo "new_tag=${new_tag}" >> $GITHUB_ENV

      - name: Create new tag
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Upload custom scripts and plugins via SFTP
        run: |
          scp -r ./vendor ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/fivem/production/server/fxData/${{ secrets.FX_DIR }}/resources/[qb]

      - name: Chown fivem:fivem for resources folder
        run: |
          ssh ${{ secrets.VPS_USER}}@${{ secrets.VPS_HOST }} 'sudo chown -R fivem:fivem /home/fivem/production/server/fxData/${{ secrets.FX_DIR }}/resources/[qb]'

      - name: Run remote command (optional)
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'sudo systemctl restart fxserver-production'


      - name: Generate and publish change log
        run: |
          echo "TBD: Change log generate and publish"
